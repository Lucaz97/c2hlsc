-- Catapult Ultra Synthesis: Report                                              
-- ------------------------- ---------------------------------------------------
-- Version:                  2023.1_2/1049935 Production Release                 
-- Build Date:               Sat Jun 10 10:53:51 PDT 2023                        
                                                                                 
-- Generated by:             lc4976@hansolo.poly.edu                             
-- Generated date:           Tue Apr 09 22:15:34 EDT 2024                        

Solution Settings: quickSort.v1
  Current state: extract
  Project: Catapult_50

Design Input Files Specified
  $PROJECT_HOME/temp_dut.c

Processes/Blocks in Design
  Process         Real Operation(s) count Latency Throughput Reset Length II Comments 
  --------------- ----------------------- ------- ---------- ------------ -- --------
  /quickSort/core                    1961       8         12            0  0        ? 
  Design Total:                      1961       8         12            0  0          
  
Bill Of Materials (Datapath)
  Component Name                 Area Score Area(Combinational)   AreaSeq Delay Post Alloc Post Assign 
  ------------------------------ ---------- ------------------- --------- ----- ---------- -----------
  [Lib: ccs_ioport]                                                                                    
  ccs_in(2,32)                        0.000               0.000     0.000 0.000          1           1 
  ccs_in(3,32)                        0.000               0.000     0.000 0.000          1           1 
  [Lib: mgc_ioport]                                                                                    
  mgc_inout_prereg_en(1,2048)         0.000               0.000     0.000 0.000          1           1 
  mgc_io_sync(0)                      0.000               0.000     0.000 0.000          3           3 
  [Lib: nangate-45nm_beh]                                                                              
  mgc_add(30,0,1,0,30,7)             81.396              18.551     0.000 1.133          0           1 
  mgc_add(30,0,2,1,30,7)            136.913              98.956     0.000 2.233          1           0 
  mgc_add(32,0,2,1,32,5)            217.355             142.520     0.000 0.809          1           0 
  mgc_add(32,1,32,1,33,7)           136.835             240.502     0.000 2.338          0           1 
  mgc_add_msb(32,1,32,1,33,6)        79.398             111.545     0.000 0.433          2           4 
  mgc_and(1,2,4)                      1.064               0.000     0.000 0.077          0         354 
  mgc_and(1,3,4)                      1.330               0.000     0.000 0.084          0         246 
  mgc_and(1,4,4)                      1.596               0.000     0.000 0.090          0          60 
  mgc_and(1,5,4)                      2.062               0.547     0.000 0.096          0          45 
  mgc_and(1,6,4)                      2.527               1.145     0.000 0.102          0          21 
  mgc_and(2,2,4)                      2.128               0.012     0.000 0.077          0           1 
  mgc_and(30,2,4)                    31.920              45.888     0.000 0.077          0           1 
  mgc_mux(1,1,2,5)                    1.862               0.000     0.000 0.085          0          10 
  mgc_mux(30,1,2,5)                  55.860              72.040     0.000 0.155          0           2 
  mgc_mux(31,1,2,5)                  57.722              74.488     0.000 0.156          1           0 
  mgc_mux(32,1,2,5)                  59.584              76.931     0.000 0.156          0         130 
  mgc_mux(32,6,64,5)               1514.650            2560.342     0.000 0.255          5           4 
  mgc_mux1hot(1,3,4)                  2.851               0.000     0.000 0.125          0           1 
  mgc_mux1hot(2,4,4)                  6.916               0.000     0.000 0.137          0           1 
  mgc_mux1hot(30,6,4)               151.620             215.870     0.000 0.153          0           1 
  mgc_mux1hot(32,3,4)                85.651             128.485     0.000 0.125        192           2 
  mgc_mux1hot(32,4,4)               110.656             163.865     0.000 0.137          0          64 
  mgc_mux1hot(6,3,4)                 16.206              13.402     0.000 0.125          0           1 
  mgc_nand(1,2,4)                     0.798               0.000     0.000 0.061          0           3 
  mgc_nand(32,2,4)                   25.536              34.710     0.000 0.061          0           1 
  mgc_nor(1,2,2)                      0.798               0.000     0.000 0.097          0         116 
  mgc_nor(1,3,4)                      1.064               0.000     0.000 0.132          0         126 
  mgc_nor(1,4,4)                      1.330               0.000     0.000 0.135          0          46 
  mgc_nor(1,5,4)                      1.929               0.000     0.000 0.138          0          19 
  mgc_nor(1,7,4)                      3.126               2.100     0.000 0.144          0           1 
  mgc_not(1,1)                        0.532               0.532     0.000 0.039          0         348 
  mgc_not(32,1)                      17.024              61.003     0.000 0.039          0           5 
  mgc_or(1,2,2)                       1.064               0.616     0.000 0.078          0         270 
  mgc_or(1,3,4)                       1.330               0.000     0.000 0.115          0           3 
  mgc_or(1,4,4)                       1.596               0.000     0.000 0.118          0           1 
  mgc_or(1,63,4)                     30.856              33.127     0.000 0.288          0           4 
  mgc_reg_pos(1,0,0,1,0,0,0,1)        6.384               1.862     4.522 0.106          0          12 
  mgc_reg_pos(1,0,0,1,0,1,1,1)        6.384               1.862     4.522 0.106          0         117 
  mgc_reg_pos(2,0,0,1,0,1,1,1)       12.768               3.724     9.044 0.106          0           1 
  mgc_reg_pos(30,0,0,1,0,1,1,1)     191.520              55.860   135.660 0.106          0           1 
  mgc_reg_pos(31,0,0,1,0,1,1,1)     197.904              57.722   140.182 0.106          0           1 
  mgc_reg_pos(32,0,0,1,0,1,1,1)     204.288              59.584   144.704 0.106          0         132 
                                                                                                       
  TOTAL AREA (After Assignment):  52114.838           41208.000 19969.000                              
  
Area Scores
                     Post-Scheduling    Post-DP & FSM  Post-Assignment 
  ----------------- ---------------- ---------------- ----------------
  Total Area Score:   67687.5          70213.0          52184.4        
  Total Reg:          43098.4  (64%)   28255.7  (40%)   28255.7  (54%) 
                                                                       
  DataPath:           67687.5 (100%)   70144.0 (100%)   52114.8 (100%) 
    MUX:              24076.1  (36%)   38453.7  (55%)   21365.7  (41%) 
    FUNC:               513.1   (1%)    1382.5   (2%)     535.8   (1%) 
    LOGIC:                0.0           2116.1   (3%)    2021.5   (4%) 
    BUFFER:               0.0              0.0              0.0        
    MEM:                  0.0              0.0              0.0        
    ROM:                  0.0              0.0              0.0        
    REG:              43098.4  (64%)   28191.7  (40%)   28191.7  (54%) 
                                                                       
  
  FSM:                    0.0             69.0   (0%)      69.5   (0%) 
    FSM-REG:              0.0             64.0  (93%)      64.0  (92%) 
    FSM-COMB:             0.0              5.0   (7%)       5.5   (8%) 
                                                                       
  
  
  (MUX = multiplexers; FUNC = datapath logic (e.g. add/mult); LOGIC = control logic)

Register-to-Variable Mappings
  Register                                        Size(bits) Gated Register CG Opt Done Variables                                             
  ----------------------------------------------- ---------- -------------- ----------- -----------------------------------------------------
  high.sva                                                32         Y           Y      high.sva                                              
  low.sva                                                 32         Y           Y      low.sva                                               
  partition:i.lpi#4                                       32         Y           Y      partition:i.lpi#4                                     
                                                                                        while:if:while:if:acc#3.ctmp.sva                      
  partition:j.lpi#4                                       32         Y           Y      partition:j.lpi#4                                     
                                                                                        partition:j.sva                                       
  stack(0)#1.sva                                          32         Y           Y      stack(0)#1.sva                                        
                                                                                        while:while:mux1h.itm                                 
  stack(1)#1.sva                                          32         Y           Y      stack(1)#1.sva                                        
  stack(10)#1.sva                                         32         Y           Y      stack(10)#1.sva                                       
  stack(100)#1.sva                                        32         Y           Y      stack(100)#1.sva                                      
  stack(101)#1.sva                                        32         Y           Y      stack(101)#1.sva                                      
  stack(102)#1.sva                                        32         Y           Y      stack(102)#1.sva                                      
  stack(103)#1.sva                                        32         Y           Y      stack(103)#1.sva                                      
  stack(104)#1.sva                                        32         Y           Y      stack(104)#1.sva                                      
  stack(105)#1.sva                                        32         Y           Y      stack(105)#1.sva                                      
  stack(106)#1.sva                                        32         Y           Y      stack(106)#1.sva                                      
  stack(107)#1.sva                                        32         Y           Y      stack(107)#1.sva                                      
  stack(108)#1.sva                                        32         Y           Y      stack(108)#1.sva                                      
  stack(109)#1.sva                                        32         Y           Y      stack(109)#1.sva                                      
  stack(11)#1.sva                                         32         Y           Y      stack(11)#1.sva                                       
  stack(110)#1.sva                                        32         Y           Y      stack(110)#1.sva                                      
  stack(111)#1.sva                                        32         Y           Y      stack(111)#1.sva                                      
  stack(112)#1.sva                                        32         Y           Y      stack(112)#1.sva                                      
  stack(113)#1.sva                                        32         Y           Y      stack(113)#1.sva                                      
  stack(114)#1.sva                                        32         Y           Y      stack(114)#1.sva                                      
  stack(115)#1.sva                                        32         Y           Y      stack(115)#1.sva                                      
  stack(116)#1.sva                                        32         Y           Y      stack(116)#1.sva                                      
  stack(117)#1.sva                                        32         Y           Y      stack(117)#1.sva                                      
  stack(118)#1.sva                                        32         Y           Y      stack(118)#1.sva                                      
  stack(119)#1.sva                                        32         Y           Y      stack(119)#1.sva                                      
  stack(12)#1.sva                                         32         Y           Y      stack(12)#1.sva                                       
  stack(120)#1.sva                                        32         Y           Y      stack(120)#1.sva                                      
  stack(121)#1.sva                                        32         Y           Y      stack(121)#1.sva                                      
  stack(122)#1.sva                                        32         Y           Y      stack(122)#1.sva                                      
  stack(123)#1.sva                                        32         Y           Y      stack(123)#1.sva                                      
  stack(124)#1.sva                                        32         Y           Y      stack(124)#1.sva                                      
  stack(125)#1.sva                                        32         Y           Y      stack(125)#1.sva                                      
  stack(126)#1.sva                                        32         Y           Y      stack(126)#1.sva                                      
  stack(127)#1.sva                                        32         Y           Y      stack(127)#1.sva                                      
  stack(13)#1.sva                                         32         Y           Y      stack(13)#1.sva                                       
  stack(14)#1.sva                                         32         Y           Y      stack(14)#1.sva                                       
  stack(15)#1.sva                                         32         Y           Y      stack(15)#1.sva                                       
  stack(16)#1.sva                                         32         Y           Y      stack(16)#1.sva                                       
  stack(17)#1.sva                                         32         Y           Y      stack(17)#1.sva                                       
  stack(18)#1.sva                                         32         Y           Y      stack(18)#1.sva                                       
  stack(19)#1.sva                                         32         Y           Y      stack(19)#1.sva                                       
  stack(2)#1.sva                                          32         Y           Y      stack(2)#1.sva                                        
  stack(20)#1.sva                                         32         Y           Y      stack(20)#1.sva                                       
  stack(21)#1.sva                                         32         Y           Y      stack(21)#1.sva                                       
  stack(22)#1.sva                                         32         Y           Y      stack(22)#1.sva                                       
  stack(23)#1.sva                                         32         Y           Y      stack(23)#1.sva                                       
  stack(24)#1.sva                                         32         Y           Y      stack(24)#1.sva                                       
  stack(25)#1.sva                                         32         Y           Y      stack(25)#1.sva                                       
  stack(26)#1.sva                                         32         Y           Y      stack(26)#1.sva                                       
  stack(27)#1.sva                                         32         Y           Y      stack(27)#1.sva                                       
  stack(28)#1.sva                                         32         Y           Y      stack(28)#1.sva                                       
  stack(29)#1.sva                                         32         Y           Y      stack(29)#1.sva                                       
  stack(3)#1.sva                                          32         Y           Y      stack(3)#1.sva                                        
  stack(30)#1.sva                                         32         Y           Y      stack(30)#1.sva                                       
  stack(31)#1.sva                                         32         Y           Y      stack(31)#1.sva                                       
  stack(32)#1.sva                                         32         Y           Y      stack(32)#1.sva                                       
  stack(33)#1.sva                                         32         Y           Y      stack(33)#1.sva                                       
  stack(34)#1.sva                                         32         Y           Y      stack(34)#1.sva                                       
  stack(35)#1.sva                                         32         Y           Y      stack(35)#1.sva                                       
  stack(36)#1.sva                                         32         Y           Y      stack(36)#1.sva                                       
  stack(37)#1.sva                                         32         Y           Y      stack(37)#1.sva                                       
  stack(38)#1.sva                                         32         Y           Y      stack(38)#1.sva                                       
  stack(39)#1.sva                                         32         Y           Y      stack(39)#1.sva                                       
  stack(4)#1.sva                                          32         Y           Y      stack(4)#1.sva                                        
  stack(40)#1.sva                                         32         Y           Y      stack(40)#1.sva                                       
  stack(41)#1.sva                                         32         Y           Y      stack(41)#1.sva                                       
  stack(42)#1.sva                                         32         Y           Y      stack(42)#1.sva                                       
  stack(43)#1.sva                                         32         Y           Y      stack(43)#1.sva                                       
  stack(44)#1.sva                                         32         Y           Y      stack(44)#1.sva                                       
  stack(45)#1.sva                                         32         Y           Y      stack(45)#1.sva                                       
  stack(46)#1.sva                                         32         Y           Y      stack(46)#1.sva                                       
  stack(47)#1.sva                                         32         Y           Y      stack(47)#1.sva                                       
  stack(48)#1.sva                                         32         Y           Y      stack(48)#1.sva                                       
  stack(49)#1.sva                                         32         Y           Y      stack(49)#1.sva                                       
  stack(5)#1.sva                                          32         Y           Y      stack(5)#1.sva                                        
  stack(50)#1.sva                                         32         Y           Y      stack(50)#1.sva                                       
  stack(51)#1.sva                                         32         Y           Y      stack(51)#1.sva                                       
  stack(52)#1.sva                                         32         Y           Y      stack(52)#1.sva                                       
  stack(53)#1.sva                                         32         Y           Y      stack(53)#1.sva                                       
  stack(54)#1.sva                                         32         Y           Y      stack(54)#1.sva                                       
  stack(55)#1.sva                                         32         Y           Y      stack(55)#1.sva                                       
  stack(56)#1.sva                                         32         Y           Y      stack(56)#1.sva                                       
  stack(57)#1.sva                                         32         Y           Y      stack(57)#1.sva                                       
  stack(58)#1.sva                                         32         Y           Y      stack(58)#1.sva                                       
  stack(59)#1.sva                                         32         Y           Y      stack(59)#1.sva                                       
  stack(6)#1.sva                                          32         Y           Y      stack(6)#1.sva                                        
  stack(60)#1.sva                                         32         Y           Y      stack(60)#1.sva                                       
  stack(61)#1.sva                                         32         Y           Y      stack(61)#1.sva                                       
  stack(62)#1.sva                                         32         Y           Y      stack(62)#1.sva                                       
  stack(63)#1.sva                                         32         Y           Y      stack(63)#1.sva                                       
  stack(64)#1.sva                                         32         Y           Y      stack(64)#1.sva                                       
  stack(65)#1.sva                                         32         Y           Y      stack(65)#1.sva                                       
  stack(66)#1.sva                                         32         Y           Y      stack(66)#1.sva                                       
  stack(67)#1.sva                                         32         Y           Y      stack(67)#1.sva                                       
  stack(68)#1.sva                                         32         Y           Y      stack(68)#1.sva                                       
  stack(69)#1.sva                                         32         Y           Y      stack(69)#1.sva                                       
  stack(7)#1.sva                                          32         Y           Y      stack(7)#1.sva                                        
  stack(70)#1.sva                                         32         Y           Y      stack(70)#1.sva                                       
  stack(71)#1.sva                                         32         Y           Y      stack(71)#1.sva                                       
  stack(72)#1.sva                                         32         Y           Y      stack(72)#1.sva                                       
  stack(73)#1.sva                                         32         Y           Y      stack(73)#1.sva                                       
  stack(74)#1.sva                                         32         Y           Y      stack(74)#1.sva                                       
  stack(75)#1.sva                                         32         Y           Y      stack(75)#1.sva                                       
  stack(76)#1.sva                                         32         Y           Y      stack(76)#1.sva                                       
  stack(77)#1.sva                                         32         Y           Y      stack(77)#1.sva                                       
  stack(78)#1.sva                                         32         Y           Y      stack(78)#1.sva                                       
  stack(79)#1.sva                                         32         Y           Y      stack(79)#1.sva                                       
  stack(8)#1.sva                                          32         Y           Y      stack(8)#1.sva                                        
  stack(80)#1.sva                                         32         Y           Y      stack(80)#1.sva                                       
  stack(81)#1.sva                                         32         Y           Y      stack(81)#1.sva                                       
  stack(82)#1.sva                                         32         Y           Y      stack(82)#1.sva                                       
  stack(83)#1.sva                                         32         Y           Y      stack(83)#1.sva                                       
  stack(84)#1.sva                                         32         Y           Y      stack(84)#1.sva                                       
  stack(85)#1.sva                                         32         Y           Y      stack(85)#1.sva                                       
  stack(86)#1.sva                                         32         Y           Y      stack(86)#1.sva                                       
  stack(87)#1.sva                                         32         Y           Y      stack(87)#1.sva                                       
  stack(88)#1.sva                                         32         Y           Y      stack(88)#1.sva                                       
  stack(89)#1.sva                                         32         Y           Y      stack(89)#1.sva                                       
  stack(9)#1.sva                                          32         Y           Y      stack(9)#1.sva                                        
  stack(90)#1.sva                                         32         Y           Y      stack(90)#1.sva                                       
  stack(91)#1.sva                                         32         Y           Y      stack(91)#1.sva                                       
  stack(92)#1.sva                                         32         Y           Y      stack(92)#1.sva                                       
  stack(93)#1.sva                                         32         Y           Y      stack(93)#1.sva                                       
  stack(94)#1.sva                                         32         Y           Y      stack(94)#1.sva                                       
  stack(95)#1.sva                                         32         Y           Y      stack(95)#1.sva                                       
  stack(96)#1.sva                                         32         Y           Y      stack(96)#1.sva                                       
  stack(97)#1.sva                                         32         Y           Y      stack(97)#1.sva                                       
  stack(98)#1.sva                                         32         Y           Y      stack(98)#1.sva                                       
  stack(99)#1.sva                                         32         Y           Y      stack(99)#1.sva                                       
  top#1(31:1).sva#1                                       31         Y           Y      top#1(31:1).sva#1                                     
                                                                                        top#1(31:1).sva.dfm                                   
  partition:pivot.sva(29:0)                               30         Y           Y      partition:pivot.sva                                   
                                                                                        top#1(31:1).sva(29:0)                                 
                                                                                        while:if:slc(while:if:while:if:acc.psp#1.sva          
  partition:pivot.sva(31:30)                               2         Y           Y      partition:pivot.sva                                   
                                                                                        top#1(31:1).sva(29:0)                                 
                                                                                        while:if:slc(while:if:while:if:acc.psp#1.sva          
  exit:partition:while.sva                                 1                            exit:partition:while.sva                              
                                                                                        swap#1:equal.tmp#10                                   
                                                                                        while:if:while:if:nor#67.cse.sva                      
  reg(high.triosy:obj.ld).cse                              1                            reg(high.triosy:obj.ld).cse                           
  swap#1:equal.tmp#100                                     1         Y           Y      swap#1:equal.tmp#100                                  
  swap#1:equal.tmp#101                                     1         Y           Y      swap#1:equal.tmp#101                                  
  swap#1:equal.tmp#102                                     1         Y           Y      swap#1:equal.tmp#102                                  
  swap#1:equal.tmp#103                                     1         Y           Y      swap#1:equal.tmp#103                                  
  swap#1:equal.tmp#105                                     1         Y           Y      swap#1:equal.tmp#105                                  
  swap#1:equal.tmp#106                                     1         Y           Y      swap#1:equal.tmp#106                                  
  swap#1:equal.tmp#107                                     1         Y           Y      swap#1:equal.tmp#107                                  
  swap#1:equal.tmp#108                                     1         Y           Y      swap#1:equal.tmp#108                                  
  swap#1:equal.tmp#109                                     1         Y           Y      swap#1:equal.tmp#109                                  
  swap#1:equal.tmp#11                                      1         Y           Y      swap#1:equal.tmp#11                                   
  swap#1:equal.tmp#110                                     1         Y           Y      swap#1:equal.tmp#110                                  
  swap#1:equal.tmp#111                                     1         Y           Y      swap#1:equal.tmp#111                                  
  swap#1:equal.tmp#113                                     1         Y           Y      swap#1:equal.tmp#113                                  
  swap#1:equal.tmp#114                                     1         Y           Y      swap#1:equal.tmp#114                                  
  swap#1:equal.tmp#115                                     1         Y           Y      swap#1:equal.tmp#115                                  
  swap#1:equal.tmp#116                                     1         Y           Y      swap#1:equal.tmp#116                                  
  swap#1:equal.tmp#117                                     1         Y           Y      swap#1:equal.tmp#117                                  
  swap#1:equal.tmp#118                                     1         Y           Y      swap#1:equal.tmp#118                                  
  swap#1:equal.tmp#119                                     1         Y           Y      swap#1:equal.tmp#119                                  
  swap#1:equal.tmp#120                                     1         Y           Y      swap#1:equal.tmp#120                                  
  swap#1:equal.tmp#121                                     1         Y           Y      swap#1:equal.tmp#121                                  
  swap#1:equal.tmp#122                                     1         Y           Y      swap#1:equal.tmp#122                                  
  swap#1:equal.tmp#123                                     1         Y           Y      swap#1:equal.tmp#123                                  
  swap#1:equal.tmp#124                                     1         Y           Y      swap#1:equal.tmp#124                                  
  swap#1:equal.tmp#125                                     1         Y           Y      swap#1:equal.tmp#125                                  
  swap#1:equal.tmp#126                                     1         Y           Y      swap#1:equal.tmp#126                                  
  swap#1:equal.tmp#127                                     1         Y           Y      swap#1:equal.tmp#127                                  
  swap#1:equal.tmp#13                                      1         Y           Y      swap#1:equal.tmp#13                                   
  swap#1:equal.tmp#14                                      1         Y           Y      swap#1:equal.tmp#14                                   
  swap#1:equal.tmp#15                                      1         Y           Y      swap#1:equal.tmp#15                                   
  swap#1:equal.tmp#17                                      1         Y           Y      swap#1:equal.tmp#17                                   
  swap#1:equal.tmp#18                                      1         Y           Y      swap#1:equal.tmp#18                                   
  swap#1:equal.tmp#19                                      1         Y           Y      swap#1:equal.tmp#19                                   
  swap#1:equal.tmp#20                                      1         Y           Y      swap#1:equal.tmp#20                                   
  swap#1:equal.tmp#21                                      1         Y           Y      swap#1:equal.tmp#21                                   
  swap#1:equal.tmp#22                                      1         Y           Y      swap#1:equal.tmp#22                                   
  swap#1:equal.tmp#23                                      1         Y           Y      swap#1:equal.tmp#23                                   
  swap#1:equal.tmp#24                                      1         Y           Y      swap#1:equal.tmp#24                                   
  swap#1:equal.tmp#25                                      1         Y           Y      swap#1:equal.tmp#25                                   
  swap#1:equal.tmp#26                                      1         Y           Y      swap#1:equal.tmp#26                                   
  swap#1:equal.tmp#27                                      1         Y           Y      swap#1:equal.tmp#27                                   
  swap#1:equal.tmp#28                                      1         Y           Y      swap#1:equal.tmp#28                                   
  swap#1:equal.tmp#29                                      1         Y           Y      swap#1:equal.tmp#29                                   
  swap#1:equal.tmp#3                                       1         Y           Y      swap#1:equal.tmp#3                                    
  swap#1:equal.tmp#30                                      1         Y           Y      swap#1:equal.tmp#30                                   
  swap#1:equal.tmp#31                                      1         Y           Y      swap#1:equal.tmp#31                                   
  swap#1:equal.tmp#33                                      1         Y           Y      swap#1:equal.tmp#33                                   
  swap#1:equal.tmp#34                                      1         Y           Y      swap#1:equal.tmp#34                                   
  swap#1:equal.tmp#35                                      1         Y           Y      swap#1:equal.tmp#35                                   
  swap#1:equal.tmp#36                                      1         Y           Y      swap#1:equal.tmp#36                                   
  swap#1:equal.tmp#37                                      1         Y           Y      swap#1:equal.tmp#37                                   
  swap#1:equal.tmp#38                                      1         Y           Y      swap#1:equal.tmp#38                                   
  swap#1:equal.tmp#39                                      1         Y           Y      swap#1:equal.tmp#39                                   
  swap#1:equal.tmp#40                                      1         Y           Y      swap#1:equal.tmp#40                                   
  swap#1:equal.tmp#41                                      1         Y           Y      swap#1:equal.tmp#41                                   
  swap#1:equal.tmp#42                                      1         Y           Y      swap#1:equal.tmp#42                                   
  swap#1:equal.tmp#43                                      1         Y           Y      swap#1:equal.tmp#43                                   
  swap#1:equal.tmp#44                                      1         Y           Y      swap#1:equal.tmp#44                                   
  swap#1:equal.tmp#45                                      1         Y           Y      swap#1:equal.tmp#45                                   
  swap#1:equal.tmp#46                                      1         Y           Y      swap#1:equal.tmp#46                                   
  swap#1:equal.tmp#47                                      1         Y           Y      swap#1:equal.tmp#47                                   
  swap#1:equal.tmp#48                                      1         Y           Y      swap#1:equal.tmp#48                                   
  swap#1:equal.tmp#49                                      1         Y           Y      swap#1:equal.tmp#49                                   
  swap#1:equal.tmp#5                                       1         Y           Y      swap#1:equal.tmp#5                                    
  swap#1:equal.tmp#50                                      1         Y           Y      swap#1:equal.tmp#50                                   
  swap#1:equal.tmp#51                                      1         Y           Y      swap#1:equal.tmp#51                                   
  swap#1:equal.tmp#52                                      1         Y           Y      swap#1:equal.tmp#52                                   
  swap#1:equal.tmp#53                                      1         Y           Y      swap#1:equal.tmp#53                                   
  swap#1:equal.tmp#54                                      1         Y           Y      swap#1:equal.tmp#54                                   
  swap#1:equal.tmp#55                                      1         Y           Y      swap#1:equal.tmp#55                                   
  swap#1:equal.tmp#56                                      1         Y           Y      swap#1:equal.tmp#56                                   
  swap#1:equal.tmp#57                                      1         Y           Y      swap#1:equal.tmp#57                                   
  swap#1:equal.tmp#58                                      1         Y           Y      swap#1:equal.tmp#58                                   
  swap#1:equal.tmp#59                                      1         Y           Y      swap#1:equal.tmp#59                                   
  swap#1:equal.tmp#60                                      1         Y           Y      swap#1:equal.tmp#60                                   
  swap#1:equal.tmp#61                                      1         Y           Y      swap#1:equal.tmp#61                                   
  swap#1:equal.tmp#62                                      1         Y           Y      swap#1:equal.tmp#62                                   
  swap#1:equal.tmp#63                                      1         Y           Y      swap#1:equal.tmp#63                                   
  swap#1:equal.tmp#7                                       1         Y           Y      swap#1:equal.tmp#7                                    
  swap#1:equal.tmp#71                                      1         Y           Y      swap#1:equal.tmp#71                                   
  swap#1:equal.tmp#73                                      1         Y           Y      swap#1:equal.tmp#73                                   
  swap#1:equal.tmp#74                                      1         Y           Y      swap#1:equal.tmp#74                                   
  swap#1:equal.tmp#75                                      1         Y           Y      swap#1:equal.tmp#75                                   
  swap#1:equal.tmp#76                                      1         Y           Y      swap#1:equal.tmp#76                                   
  swap#1:equal.tmp#77                                      1         Y           Y      swap#1:equal.tmp#77                                   
  swap#1:equal.tmp#78                                      1         Y           Y      swap#1:equal.tmp#78                                   
  swap#1:equal.tmp#79                                      1         Y           Y      swap#1:equal.tmp#79                                   
  swap#1:equal.tmp#83                                      1         Y           Y      swap#1:equal.tmp#83                                   
  swap#1:equal.tmp#85                                      1         Y           Y      swap#1:equal.tmp#85                                   
  swap#1:equal.tmp#86                                      1         Y           Y      swap#1:equal.tmp#86                                   
  swap#1:equal.tmp#87                                      1         Y           Y      swap#1:equal.tmp#87                                   
  swap#1:equal.tmp#88                                      1         Y           Y      swap#1:equal.tmp#88                                   
  swap#1:equal.tmp#89                                      1         Y           Y      swap#1:equal.tmp#89                                   
  swap#1:equal.tmp#90                                      1         Y           Y      swap#1:equal.tmp#90                                   
  swap#1:equal.tmp#91                                      1         Y           Y      swap#1:equal.tmp#91                                   
  swap#1:equal.tmp#92                                      1         Y           Y      swap#1:equal.tmp#92                                   
  swap#1:equal.tmp#93                                      1         Y           Y      swap#1:equal.tmp#93                                   
  swap#1:equal.tmp#94                                      1         Y           Y      swap#1:equal.tmp#94                                   
  swap#1:equal.tmp#95                                      1         Y           Y      swap#1:equal.tmp#95                                   
  swap#1:equal.tmp#97                                      1         Y           Y      swap#1:equal.tmp#97                                   
  swap#1:equal.tmp#99                                      1         Y           Y      swap#1:equal.tmp#99                                   
  swap#1:nor#1.itm                                         1                            swap#1:nor#1.itm                                      
                                                                                        while:if:and#122.tmp.sva                              
  swap#1:nor#101.itm                                       1                            swap#1:nor#101.itm                                    
                                                                                        while:if:and#369.tmp.sva                              
  swap#1:nor#11.itm                                        1                            swap#1:nor#11.itm                                     
                                                                                        while:if:and.stg_1_0.sva                              
  swap#1:nor#15.itm                                        1                            swap#1:nor#15.itm                                     
                                                                                        while:if:and.stg_1_3.sva                              
  swap#1:nor#3.itm                                         1                            swap#1:nor#3.itm                                      
                                                                                        while:if:and.stg_2_0.sva                              
  swap#1:nor#30.itm                                        1                            swap#1:nor#30.itm                                     
                                                                                        while:if:and.stg_2_7.sva                              
  swap#1:nor#5.itm                                         1                            swap#1:nor#5.itm                                      
                                                                                        while:if:and.stg_3_0.sva                              
  swap#1:nor#56.itm                                        1                            swap#1:nor#56.itm                                     
                                                                                        while:if:and.stg_3_15.sva                             
  swap#1:nor#57.itm                                        1                            swap#1:nor#57.itm                                     
                                                                                        while:if:and.stg_4_0.sva                              
  swap#1:nor#58.itm                                        1                            swap#1:nor#58.itm                                     
                                                                                        while:if:and.stg_4_31.sva                             
  swap#1:nor#59.itm                                        1         Y           Y      swap#1:nor#59.itm                                     
  swap#1:nor#60.itm                                        1         Y           Y      swap#1:nor#60.itm                                     
  swap#1:nor#61.itm                                        1         Y           Y      swap#1:nor#61.itm                                     
  swap#1:nor#63.itm                                        1         Y           Y      swap#1:nor#63.itm                                     
  swap#1:nor#7.itm                                         1         Y           Y      swap#1:nor#7.itm                                      
  swap#1:nor#71.itm                                        1         Y           Y      swap#1:nor#71.itm                                     
  swap#1:nor#72.itm                                        1         Y           Y      swap#1:nor#72.itm                                     
  swap#1:nor#73.itm                                        1         Y           Y      swap#1:nor#73.itm                                     
  swap#1:nor#75.itm                                        1         Y           Y      swap#1:nor#75.itm                                     
  swap#1:nor#8.itm                                         1         Y           Y      swap#1:nor#8.itm                                      
  swap#1:nor#86.itm                                        1         Y           Y      swap#1:nor#86.itm                                     
  swap#1:nor#88.itm                                        1         Y           Y      swap#1:nor#88.itm                                     
  swap#1:nor#94.itm                                        1         Y           Y      swap#1:nor#94.itm                                     
  swap#1:nor.itm                                           1         Y           Y      swap#1:nor.itm                                        
  while:acc#3.cse(32)                                      1         Y           Y      while:acc#3.cse(32)                                   
  while:if:slc(while:if:while:if:acc#1.psp.sva(5)          1         Y           Y      while:if:slc(while:if:while:if:acc#1.psp.sva(5)       
                                                                                                                                              
  Total:                                                4416           4404        4404 (Total Gating Ratio: 1.00, CG Opt Gating Ratio: 1.00) 
  
Timing Report
  Critical Path
    Max Delay:  4.280939000000001
    Slack:      15.719061
    
    Path                                                                                        Startpoint                      Endpoint                                    Delay  Slack   
    ------------------------------------------------------------------------------------------- ------------------------------- ------------------------------------------- ------ -------
    1                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/quickSort:core_core:fsm:inst 4.2809 15.7191 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#4                                                                                                                             0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#4.itm                                                                                                                         0.0000 3.7311  
      quickSort:core/partition:while:while#1:aif:not#1                                          mgc_not_32_1                                                                0.0390 3.7701  
      quickSort:core/partition:while:while#1:aif:not#1.itm                                                                                                                  0.0000 3.7701  
      quickSort:core/partition:while:while#1:aif:acc                                            mgc_add_msb_32_1_32_1_33_6                                                  0.4333 4.2034  
      quickSort:core/partition:while:while#1:aif:acc.itm                                                                                                                    0.0000 4.2034  
      quickSort:core/partition:while:while#1:aelse:slc(partition:while:while#1:aif:acc)(32)                                                                                 0.0000 4.2034  
      quickSort:core/partition:while:while#1:aelse:slc(partition:while:while#1:aif:acc)(32).itm                                                                             0.0000 4.2034  
      quickSort:core/or#531                                                                     mgc_or_1_2_2                                                                0.0776 4.2809  
      quickSort:core/or#531.itm                                                                                                                                             0.0000 4.2809  
      quickSort:core/quickSort:core_core:fsm:inst                                               quickSort:core_core:fsm                                                     0.0000 4.2809  
                                                                                                                                                                                           
    2                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core_core:fsm                     4.2809 15.7191 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#4                                                                                                                             0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#4.itm                                                                                                                         0.0000 3.7311  
      quickSort:core/partition:while:while#1:aif:not#1                                          mgc_not_32_1                                                                0.0390 3.7701  
      quickSort:core/partition:while:while#1:aif:not#1.itm                                                                                                                  0.0000 3.7701  
      quickSort:core/partition:while:while#1:aif:acc                                            mgc_add_msb_32_1_32_1_33_6                                                  0.4333 4.2034  
      quickSort:core/partition:while:while#1:aif:acc.itm                                                                                                                    0.0000 4.2034  
      quickSort:core/partition:while:while#1:aelse:slc(partition:while:while#1:aif:acc)(32)                                                                                 0.0000 4.2034  
      quickSort:core/partition:while:while#1:aelse:slc(partition:while:while#1:aif:acc)(32).itm                                                                             0.0000 4.2034  
      quickSort:core/or#531                                                                     mgc_or_1_2_2                                                                0.0776 4.2809  
      quickSort:core/or#531.itm                                                                                                                                             0.0000 4.2809  
      quickSort:core_core:fsm/partition:while:while#1.C#0_tr0                                                                                                               0.0000 4.2809  
                                                                                                                                                                                           
    3                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core_core:fsm                     4.2419 15.7581 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#3                                                                                                                             0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#3.itm                                                                                                                         0.0000 3.7311  
      quickSort:core/partition:while:while:aif:acc                                              mgc_add_msb_32_1_32_1_33_6                                                  0.4333 4.1644  
      quickSort:core/partition:while:while:aif:acc.itm                                                                                                                      0.0000 4.1644  
      quickSort:core/partition:while:while:aelse:slc(partition:while:while:aif:acc)(32)                                                                                     0.0000 4.1644  
      quickSort:core/partition:while:while:aelse:slc(partition:while:while:aif:acc)(32).itm                                                                                 0.0000 4.1644  
      quickSort:core/or#530                                                                     mgc_or_1_2_2                                                                0.0776 4.2419  
      quickSort:core/or#530.itm                                                                                                                                             0.0000 4.2419  
      quickSort:core_core:fsm/partition:while:while.C#0_tr0                                                                                                                 0.0000 4.2419  
                                                                                                                                                                                           
    4                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/quickSort:core_core:fsm:inst 4.2419 15.7581 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#3                                                                                                                             0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#3.itm                                                                                                                         0.0000 3.7311  
      quickSort:core/partition:while:while:aif:acc                                              mgc_add_msb_32_1_32_1_33_6                                                  0.4333 4.1644  
      quickSort:core/partition:while:while:aif:acc.itm                                                                                                                      0.0000 4.1644  
      quickSort:core/partition:while:while:aelse:slc(partition:while:while:aif:acc)(32)                                                                                     0.0000 4.1644  
      quickSort:core/partition:while:while:aelse:slc(partition:while:while:aif:acc)(32).itm                                                                                 0.0000 4.1644  
      quickSort:core/or#530                                                                     mgc_or_1_2_2                                                                0.0776 4.2419  
      quickSort:core/or#530.itm                                                                                                                                             0.0000 4.2419  
      quickSort:core/quickSort:core_core:fsm:inst                                               quickSort:core_core:fsm                                                     0.0000 4.2419  
                                                                                                                                                                                           
    5                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/reg(exit:partition:while)    3.8951 16.1049 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(32)                                                                                                                                 0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(32).itm                                                                                                                             0.0000 3.7311  
      quickSort:core/partition:while:not                                                        mgc_not_1_1                                                                 0.0390 3.7701  
      quickSort:core/partition:while:not.itm                                                                                                                                0.0000 3.7701  
      quickSort:core/partition:while:mux1h#2                                                    mgc_mux1hot_1_3_4                                                           0.1250 3.8951  
      quickSort:core/partition:while:mux1h#2.itm                                                                                                                            0.0000 3.8951  
      quickSort:core/reg(exit:partition:while)                                                  mgc_reg_pos_1_0_0_1_0_0_0_1                                                 0.0000 3.8951  
                                                                                                                                                                                           
    6                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/reg(stack(41)#1)             3.8875 16.1125 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#94                                                                                                                            0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#94.itm                                                                                                                        0.0000 3.7311  
      quickSort:core/while:while:while:mux#83                                                   mgc_mux_32_1_2_5                                                            0.1564 3.8875  
      quickSort:core/while:while:while:mux#83.itm                                                                                                                           0.0000 3.8875  
      quickSort:core/reg(stack(41)#1)                                                           mgc_reg_pos_32_0_0_1_0_1_1_1                                                0.0000 3.8875  
                                                                                                                                                                                           
    7                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/reg(stack(7)#1)              3.8875 16.1125 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#77                                                                                                                            0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#77.itm                                                                                                                        0.0000 3.7311  
      quickSort:core/while:while:while:mux#66                                                   mgc_mux_32_1_2_5                                                            0.1564 3.8875  
      quickSort:core/while:while:while:mux#66.itm                                                                                                                           0.0000 3.8875  
      quickSort:core/reg(stack(7)#1)                                                            mgc_reg_pos_32_0_0_1_0_1_1_1                                                0.0000 3.8875  
                                                                                                                                                                                           
    8                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/reg(stack(3)#1)              3.8875 16.1125 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#75                                                                                                                            0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#75.itm                                                                                                                        0.0000 3.7311  
      quickSort:core/while:while:while:mux#64                                                   mgc_mux_32_1_2_5                                                            0.1564 3.8875  
      quickSort:core/while:while:while:mux#64.itm                                                                                                                           0.0000 3.8875  
      quickSort:core/reg(stack(3)#1)                                                            mgc_reg_pos_32_0_0_1_0_1_1_1                                                0.0000 3.8875  
                                                                                                                                                                                           
    9                                                                                           quickSort:core/reg(top#1(31:1)) quickSort:core/reg(stack(63)#1)             3.8875 16.1125 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#105                                                                                                                           0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#105.itm                                                                                                                       0.0000 3.7311  
      quickSort:core/while:while:while:mux#94                                                   mgc_mux_32_1_2_5                                                            0.1564 3.8875  
      quickSort:core/while:while:while:mux#94.itm                                                                                                                           0.0000 3.8875  
      quickSort:core/reg(stack(63)#1)                                                           mgc_reg_pos_32_0_0_1_0_1_1_1                                                0.0000 3.8875  
                                                                                                                                                                                           
    10                                                                                          quickSort:core/reg(top#1(31:1)) quickSort:core/reg(stack(9)#1)              3.8875 16.1125 
                                                                                                                                                                                           
      Instance                                                                                  Component                                                                   Delta  Delay   
      --------                                                                                  ---------                                                                   -----  -----   
      quickSort:core/reg(top#1(31:1))                                                           mgc_reg_pos_31_0_0_1_0_1_1_1                                                0.1060 0.1060  
      quickSort:core/top#1(31:1).sva#1                                                                                                                                      0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0)                                                                                                                       0.0000 0.1060  
      quickSort:core/top:slc(top#1(31:1).sva#1)(29-0).itm                                                                                                                   0.0000 0.1060  
      quickSort:core/while:if:slc(while:if:while:if:acc                                         mgc_addc_30_0_1_0_30_7                                                      1.1333 1.2393  
      quickSort:core/while:if:slc(while:if:while:if:acc.tmp                                                                                                                 0.0000 1.2393  
      quickSort:core/while:mux1h#2                                                              mgc_mux1hot_30_6_4                                                          0.1534 1.3927  
      quickSort:core/while:mux1h#2.itm                                                                                                                                      0.0000 1.3927  
      quickSort:core/while:conc                                                                                                                                             0.0000 1.3927  
      quickSort:core/while:conc.itm                                                                                                                                         0.0000 1.3927  
      quickSort:core/partition:while:acc#1:rg                                                   mgc_addc_32_1_32_1_33_7                                                     2.3384 3.7311  
      quickSort:core/z.out#1                                                                                                                                                0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#78                                                                                                                            0.0000 3.7311  
      quickSort:core/while:slc(z.out#1)(31-0)#78.itm                                                                                                                        0.0000 3.7311  
      quickSort:core/while:while:while:mux#67                                                   mgc_mux_32_1_2_5                                                            0.1564 3.8875  
      quickSort:core/while:while:while:mux#67.itm                                                                                                                           0.0000 3.8875  
      quickSort:core/reg(stack(9)#1)                                                            mgc_reg_pos_32_0_0_1_0_1_1_1                                                0.0000 3.8875  
                                                                                                                                                                                           
    
  Register Input and Register-to-Output Slack
    Clock period or pin-to-reg delay constraint (clk): 20.0
    Clock uncertainty constraint (clk)               : 0.0
    
    Instance                                                     Port                                                        Slack (Delay) Messages 
    ------------------------------------------------------------ --------------------------------------------------------- ------- ------- --------
    quickSort:core/reg(stack(0)#1)                               mux1h.itm                                                 16.1439  3.8561          
    quickSort:core/reg(stack(2)#1)                               while:while:while:mux.itm                                 19.6601  0.3399          
    quickSort:core/reg(stack(4)#1)                               while:while:while:mux#1.itm                               19.3049  0.6951          
    quickSort:core/reg(stack(6)#1)                               while:while:while:mux#2.itm                               19.3049  0.6951          
    quickSort:core/reg(stack(8)#1)                               while:while:while:mux#3.itm                               19.3824  0.6176          
    quickSort:core/reg(stack(10)#1)                              while:while:while:mux#4.itm                               19.4214  0.5786          
    quickSort:core/reg(stack(12)#1)                              while:while:while:mux#5.itm                               19.3049  0.6951          
    quickSort:core/reg(stack(14)#1)                              while:while:while:mux#6.itm                               19.3049  0.6951          
    quickSort:core/reg(stack(16)#1)                              while:while:while:mux#7.itm                               19.4599  0.5401          
    quickSort:core/reg(stack(18)#1)                              while:while:while:mux#8.itm                               19.4989  0.5011          
    quickSort:core/reg(stack(20)#1)                              while:while:while:mux#9.itm                               19.3049  0.6951          
    quickSort:core/reg(stack(22)#1)                              while:while:while:mux#10.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(24)#1)                              while:while:while:mux#11.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(26)#1)                              while:while:while:mux#12.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(28)#1)                              while:while:while:mux#13.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(30)#1)                              while:while:while:mux#14.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(32)#1)                              while:while:while:mux#15.itm                              19.5374  0.4626          
    quickSort:core/reg(stack(34)#1)                              while:while:while:mux#16.itm                              19.5764  0.4236          
    quickSort:core/reg(stack(36)#1)                              while:while:while:mux#17.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(38)#1)                              while:while:while:mux#18.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(40)#1)                              while:while:while:mux#19.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(42)#1)                              while:while:while:mux#20.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(44)#1)                              while:while:while:mux#21.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(46)#1)                              while:while:while:mux#22.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(48)#1)                              while:while:while:mux#23.itm                              19.4599  0.5401          
    quickSort:core/reg(stack(50)#1)                              while:while:while:mux#24.itm                              19.4989  0.5011          
    quickSort:core/reg(stack(52)#1)                              while:while:while:mux#25.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(54)#1)                              while:while:while:mux#26.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(56)#1)                              while:while:while:mux#27.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(58)#1)                              while:while:while:mux#28.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(60)#1)                              while:while:while:mux#29.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(62)#1)                              while:while:while:mux#30.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(64)#1)                              while:while:while:mux#31.itm                              19.6539  0.3461          
    quickSort:core/reg(stack(66)#1)                              while:while:while:mux#32.itm                              19.6539  0.3461          
    quickSort:core/reg(stack(68)#1)                              while:while:while:mux#33.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(70)#1)                              while:while:while:mux#34.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(72)#1)                              while:while:while:mux#35.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(74)#1)                              while:while:while:mux#36.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(76)#1)                              while:while:while:mux#37.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(78)#1)                              while:while:while:mux#38.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(80)#1)                              while:while:while:mux#39.itm                              19.4599  0.5401          
    quickSort:core/reg(stack(82)#1)                              while:while:while:mux#40.itm                              19.4989  0.5011          
    quickSort:core/reg(stack(84)#1)                              while:while:while:mux#41.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(86)#1)                              while:while:while:mux#42.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(88)#1)                              while:while:while:mux#43.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(90)#1)                              while:while:while:mux#44.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(92)#1)                              while:while:while:mux#45.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(94)#1)                              while:while:while:mux#46.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(96)#1)                              while:while:while:mux#47.itm                              19.5374  0.4626          
    quickSort:core/reg(stack(98)#1)                              while:while:while:mux#48.itm                              19.5764  0.4236          
    quickSort:core/reg(stack(100)#1)                             while:while:while:mux#49.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(102)#1)                             while:while:while:mux#50.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(104)#1)                             while:while:while:mux#51.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(106)#1)                             while:while:while:mux#52.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(108)#1)                             while:while:while:mux#53.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(110)#1)                             while:while:while:mux#54.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(112)#1)                             while:while:while:mux#55.itm                              19.4599  0.5401          
    quickSort:core/reg(stack(114)#1)                             while:while:while:mux#56.itm                              19.4989  0.5011          
    quickSort:core/reg(stack(116)#1)                             while:while:while:mux#57.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(118)#1)                             while:while:while:mux#58.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(120)#1)                             while:while:while:mux#59.itm                              19.3824  0.6176          
    quickSort:core/reg(stack(122)#1)                             while:while:while:mux#60.itm                              19.4214  0.5786          
    quickSort:core/reg(stack(124)#1)                             while:while:while:mux#61.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(126)#1)                             while:while:while:mux#62.itm                              19.3049  0.6951          
    quickSort:core/reg(stack(1)#1)                               mux1h#2.itm                                               16.1439  3.8561          
    quickSort:core/reg(stack(3)#1)                               while:while:while:mux#64.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(5)#1)                               while:while:while:mux#65.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(7)#1)                               while:while:while:mux#66.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(9)#1)                               while:while:while:mux#67.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(11)#1)                              while:while:while:mux#68.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(13)#1)                              while:while:while:mux#69.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(15)#1)                              while:while:while:mux#70.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(17)#1)                              while:while:while:mux#71.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(19)#1)                              while:while:while:mux#72.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(21)#1)                              while:while:while:mux#73.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(23)#1)                              while:while:while:mux#74.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(25)#1)                              while:while:while:mux#75.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(27)#1)                              while:while:while:mux#76.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(29)#1)                              while:while:while:mux#77.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(31)#1)                              while:while:while:mux#78.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(33)#1)                              while:while:while:mux#79.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(35)#1)                              while:while:while:mux#80.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(37)#1)                              while:while:while:mux#81.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(39)#1)                              while:while:while:mux#82.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(41)#1)                              while:while:while:mux#83.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(43)#1)                              while:while:while:mux#84.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(45)#1)                              while:while:while:mux#85.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(47)#1)                              while:while:while:mux#86.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(49)#1)                              while:while:while:mux#87.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(51)#1)                              while:while:while:mux#88.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(53)#1)                              while:while:while:mux#89.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(55)#1)                              while:while:while:mux#90.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(57)#1)                              while:while:while:mux#91.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(59)#1)                              while:while:while:mux#92.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(61)#1)                              while:while:while:mux#93.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(63)#1)                              while:while:while:mux#94.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(65)#1)                              while:while:while:mux#95.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(67)#1)                              while:while:while:mux#96.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(69)#1)                              while:while:while:mux#97.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(71)#1)                              while:while:while:mux#98.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(73)#1)                              while:while:while:mux#99.itm                              16.1125  3.8875          
    quickSort:core/reg(stack(75)#1)                              while:while:while:mux#100.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(77)#1)                              while:while:while:mux#101.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(79)#1)                              while:while:while:mux#102.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(81)#1)                              while:while:while:mux#103.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(83)#1)                              while:while:while:mux#104.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(85)#1)                              while:while:while:mux#105.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(87)#1)                              while:while:while:mux#106.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(89)#1)                              while:while:while:mux#107.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(91)#1)                              while:while:while:mux#108.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(93)#1)                              while:while:while:mux#109.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(95)#1)                              while:while:while:mux#110.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(97)#1)                              while:while:while:mux#111.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(99)#1)                              while:while:while:mux#112.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(101)#1)                             while:while:while:mux#113.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(103)#1)                             while:while:while:mux#114.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(105)#1)                             while:while:while:mux#115.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(107)#1)                             while:while:while:mux#116.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(109)#1)                             while:while:while:mux#117.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(111)#1)                             while:while:while:mux#118.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(113)#1)                             while:while:while:mux#119.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(115)#1)                             while:while:while:mux#120.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(117)#1)                             while:while:while:mux#121.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(119)#1)                             while:while:while:mux#122.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(121)#1)                             while:while:while:mux#123.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(123)#1)                             while:while:while:mux#124.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(125)#1)                             while:while:while:mux#125.itm                             16.1125  3.8875          
    quickSort:core/reg(stack(127)#1)                             while:while:while:mux#126.itm                             16.1125  3.8875          
    quickSort:core/reg(high.triosy:obj.ld)                       and#950.itm                                               19.8165  0.1835          
    quickSort:core/reg(partition:pivot)                          partition:pivot:slc(partition:pivot:mux1h.sdt)(31-30).itm 19.2581  0.7419          
    quickSort:core/reg(partition:pivot)#1                        partition:pivot:partition:pivot:mux.itm                   18.3732  1.6268          
    quickSort:core/reg(top#1(31:1))                              while:slc(z.out#1)(30-0).itm                              16.2689  3.7311          
    quickSort:core/reg(swap#1:equal)                             swap#1:swap#1:and#62.itm                                  19.7916  0.2084          
    quickSort:core/reg(swap#1:equal)#1                           swap:equal.tmp#128                                        19.1926  0.8074          
    quickSort:core/reg(swap#1:equal)#2                           swap#1:swap#1:and#61.itm                                  19.7526  0.2474          
    quickSort:core/reg(swap#1:equal)#3                           swap:equal.tmp#129                                        19.1536  0.8464          
    quickSort:core/reg(swap#1:equal)#4                           swap#1:swap#1:and#60.itm                                  19.7526  0.2474          
    quickSort:core/reg(swap#1:equal)#5                           swap:equal.tmp#130                                        19.1536  0.8464          
    quickSort:core/reg(swap#1:equal)#6                           swap#1:swap#1:and#59.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#7                           swap:equal.tmp#131                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#8                           swap#1:swap#1:and#2.itm                                   19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#9                           swap#1:swap#1:and#58.itm                                  19.7526  0.2474          
    quickSort:core/reg(swap#1:equal)#10                          swap:equal.tmp#132                                        19.1536  0.8464          
    quickSort:core/reg(swap#1:equal)#11                          swap#1:swap#1:and#57.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#12                          swap:equal.tmp#133                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#13                          swap#1:swap#1:and#4.itm                                   19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#14                          swap#1:swap#1:and#56.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#15                          swap:equal.tmp#134                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#16                          swap#1:swap#1:and#55.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#17                          swap:equal.tmp#135                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#18                          swap#1:swap#1:and#6.itm                                   19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#19                          swap:equal.tmp#136                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#20                          swap#1:swap#1:and#54.itm                                  19.7526  0.2474          
    quickSort:core/reg(swap#1:equal)#21                          swap:equal.tmp#137                                        19.1536  0.8464          
    quickSort:core/reg(swap#1:equal)#22                          swap#1:swap#1:and#53.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#23                          swap:equal.tmp#138                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#24                          swap:equal.tmp#139                                        19.0765  0.9235          
    quickSort:core/reg(swap#1:equal)#25                          swap#1:swap#1:and#52.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#26                          swap:equal.tmp#140                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#27                          swap:equal.tmp#141                                        19.0765  0.9235          
    quickSort:core/reg(swap#1:equal)#28                          swap#1:swap#1:and#51.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#29                          swap:equal.tmp#142                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#30                          swap#1:swap#1:and#10.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#31                          swap:equal.tmp#143                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#32                          swap#1:swap#1:and#50.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#33                          swap:equal.tmp#144                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#34                          swap:equal.tmp#145                                        19.0765  0.9235          
    quickSort:core/reg(swap#1:equal)#35                          swap#1:swap#1:and#49.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#36                          swap:equal.tmp#146                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#37                          swap#1:swap#1:and#12.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#38                          swap:equal.tmp#147                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#39                          swap#1:swap#1:and#48.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#40                          swap:equal.tmp#148                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#41                          swap#1:swap#1:and#13.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#42                          swap:equal.tmp#149                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#43                          swap#1:swap#1:and#47.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#44                          swap#1:swap#1:and#14.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#45                          swap:equal.tmp#150                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#46                          swap#1:swap#1:and#46.itm                                  19.7526  0.2474          
    quickSort:core/reg(swap#1:equal)#47                          swap:equal.tmp#151                                        19.1536  0.8464          
    quickSort:core/reg(swap#1:equal)#48                          swap#1:swap#1:and#45.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#49                          swap:equal.tmp#152                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#50                          swap#1:swap#1:and#16.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#51                          swap#1:swap#1:and#44.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#52                          swap:equal.tmp#153                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#53                          swap#1:swap#1:and#17.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#54                          swap#1:swap#1:and#43.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#55                          swap:equal.tmp#154                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#56                          swap#1:swap#1:and#18.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#57                          swap:equal.tmp#155                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#58                          swap#1:swap#1:and#42.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#59                          swap:equal.tmp#156                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#60                          swap#1:swap#1:and#19.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#61                          swap#1:swap#1:and#41.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#62                          swap:equal.tmp#157                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#63                          swap#1:swap#1:and#20.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#64                          swap:equal.tmp#158                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#65                          swap#1:swap#1:and#40.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#66                          swap:equal.tmp#159                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#67                          swap#1:swap#1:and#21.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#68                          swap:equal.tmp#160                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#69                          swap#1:swap#1:and#39.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#70                          swap#1:swap#1:and#22.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#71                          swap:equal.tmp#161                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#72                          swap#1:swap#1:and#38.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#73                          swap:equal.tmp#162                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#74                          swap#1:swap#1:and#23.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#75                          swap:equal.tmp#163                                        19.0765  0.9235          
    quickSort:core/reg(swap#1:equal)#76                          swap#1:swap#1:and#37.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#77                          swap:equal.tmp#164                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#78                          swap#1:swap#1:and#24.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#79                          swap:equal.tmp#165                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#80                          swap#1:swap#1:and#36.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#81                          swap:equal.tmp#166                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#82                          swap#1:swap#1:and#25.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#83                          swap:equal.tmp#167                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#84                          swap#1:swap#1:and#35.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#85                          swap:equal.tmp#168                                        19.0765  0.9235          
    quickSort:core/reg(swap#1:equal)#86                          swap#1:swap#1:and#26.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#87                          swap:equal.tmp#169                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#88                          swap#1:swap#1:and#34.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#89                          swap:equal.tmp#170                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#90                          swap#1:swap#1:and#27.itm                                  19.6725  0.3275          
    quickSort:core/reg(swap#1:equal)#91                          swap:equal.tmp#171                                        19.0735  0.9265          
    quickSort:core/reg(swap#1:equal)#92                          swap#1:swap#1:and#33.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#93                          swap#1:swap#1:and#28.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#94                          swap:equal.tmp#172                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#95                          swap#1:swap#1:and#32.itm                                  19.6756  0.3244          
    quickSort:core/reg(swap#1:equal)#96                          swap:equal.tmp#173                                        19.0765  0.9235          
    quickSort:core/reg(swap#1:equal)#97                          swap#1:swap#1:and#29.itm                                  19.7008  0.2992          
    quickSort:core/reg(swap#1:equal)#98                          swap:equal.tmp#174                                        19.1018  0.8982          
    quickSort:core/reg(swap#1:equal)#99                          swap#1:swap#1:and#30.itm                                  19.7526  0.2474          
    quickSort:core/reg(swap#1:equal)#100                         swap:equal.tmp#175                                        19.1536  0.8464          
    quickSort:core/reg(swap#1:nor#101)                           swap#1:mux.itm                                            19.4015  0.5985          
    quickSort:core/reg(swap#1:nor#94)                            swap#1:nor#94.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#88)                            swap#1:nor#88.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#86)                            swap#1:nor#86.itm#2                                       19.0796  0.9204          
    quickSort:core/reg(swap#1:nor#75)                            swap#1:nor#75.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#73)                            swap#1:nor#73.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#72)                            swap#1:nor#72.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#71)                            swap#1:nor#71.itm#2                                       19.0796  0.9204          
    quickSort:core/reg(swap#1:nor#63)                            swap#1:nor#63.itm#2                                       19.0796  0.9204          
    quickSort:core/reg(swap#1:nor#61)                            swap#1:nor#61.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#60)                            swap#1:nor#60.itm#2                                       19.0765  0.9235          
    quickSort:core/reg(swap#1:nor#59)                            swap#1:nor#59.itm#2                                       19.0796  0.9204          
    quickSort:core/reg(swap#1:nor#58)                            swap#1:mux#1.itm                                          19.4986  0.5014          
    quickSort:core/reg(swap#1:nor#57)                            swap#1:mux#2.itm                                          19.4790  0.5210          
    quickSort:core/reg(swap#1:nor#56)                            swap#1:mux#3.itm                                          19.5761  0.4239          
    quickSort:core/reg(low)                                      low.sva#1                                                 18.5128  1.4872          
    quickSort:core/reg(swap#1:nor#30)                            swap#1:mux#4.itm                                          19.6536  0.3464          
    quickSort:core/reg(swap#1:nor#15)                            swap#1:mux#5.itm                                          19.6707  0.3293          
    quickSort:core/reg(swap#1:nor#11)                            swap#1:mux#6.itm                                          19.6739  0.3261          
    quickSort:core/reg(swap#1:nor#8)                             swap#1:nor#8.itm#4                                        19.7593  0.2407          
    quickSort:core/reg(swap#1:nor#7)                             swap#1:nor#7.itm#4                                        19.7561  0.2439          
    quickSort:core/reg(swap#1:nor#5)                             swap#1:mux#7.itm                                          19.5565  0.4435          
    quickSort:core/reg(swap#1:nor#3)                             swap#1:mux#8.itm                                          19.6340  0.3660          
    quickSort:core/reg(swap#1:nor#1)                             swap#1:mux#9.itm                                          19.4211  0.5789          
    quickSort:core/reg(swap#1:nor)                               swap#1:nor.itm#4                                          19.7561  0.2439          
    quickSort:core/reg(while:acc#3.cse(32))                      while:acc#3.itm(32)                                       19.1272  0.8728          
    quickSort:core/reg(exit:partition:while)                     partition:while:mux1h#2.itm                               16.1049  3.8951          
    quickSort:core/reg(partition:j)                              partition:j:partition:j:mux.itm                           16.1125  3.8875          
    quickSort:core/reg(partition:i)                              low:low:mux.itm                                           16.1125  3.8875          
    quickSort:core/reg(high)                                     high.sva#1                                                19.1272  0.8728          
    quickSort:core/reg(while:if:slc(while:if:while:if:acc#1.psp) while:slc(z.out#1)(30-0)#2.itm                            16.2689  3.7311          
    quickSort                                                    arr:rsc.zout                                              19.0478  0.9522          
    quickSort                                                    arr:rsc.lzout                                             16.1139  3.8861          
    quickSort                                                    arr.triosy.lz                                             19.8940  0.1060          
    quickSort                                                    low.triosy.lz                                             19.8940  0.1060          
    quickSort                                                    high.triosy.lz                                            19.8940  0.1060          
    
Operator Bitwidth Summary
  Operation Size (bits) Count 
  --------- ----------- -----
  add                         
  -                  33     5 
  -                  30     1 
  and                         
  -                  30     1 
  -                   2     1 
  -                   1   726 
  mux                         
  -                  32   134 
  -                  30     2 
  -                   1    10 
  mux1h                       
  -                   6     1 
  -                  32    66 
  -                  30     1 
  -                   2     1 
  -                   1     1 
  nand                        
  -                  32     1 
  -                   1     3 
  nor                         
  -                   1   308 
  not                         
  -                  32     5 
  -                   1   348 
  or                          
  -                   1   278 
  read_port                   
  -                  32     2 
  -                2048     1 
  read_sync                   
  -                   0     3 
  reg                         
  -                  32   132 
  -                  31     1 
  -                  30     1 
  -                   2     1 
  -                   1   129 
  
End of Report
